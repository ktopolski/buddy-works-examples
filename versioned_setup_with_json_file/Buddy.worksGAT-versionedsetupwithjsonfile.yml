- pipeline: "Buddy.works + GAT - versioned setup with json file"
  on: "CLICK"
  refs:
  - "refs/heads/main"
  priority: "NORMAL"
  fail_on_prepare_env_warning: true
  resources: "DEFAULT"
  actions:
  - action: "Request crowdtesting with GlobalAppTesting(using jq)"
    type: "NATIVE_BUILD_DOCKER_CLI"
    working_directory: "/home/ubuntu/build"
    commands:
    - "sudo apt-get install -yqq jq"
    - ""
    - "app_url=`jq -cM .application_url < gat.json`"
    - "test_name=`jq -cM .name < gat.json`"
    - "test_description=`jq -cM .description < gat.json`"
    - "credentials_and_access_instructions=`jq -cM .credentials_and_access_instructions < gat.json`"
    - "test_cases=`jq -cM .test_cases < gat.json`"
    - ""
    - "test_run_path=\"https://app.globalapptesting.com/api/v2/test_requests\""
    - "dry_run_path=$test_run_path/dry_run"
    - "if [[ $DRY_RUN == \"true\" ]]; then"
    - "  api_url=$dry_run_path"
    - "else"
    - "  api_url=$test_run_path"
    - "fi"
    - ""
    - "curl \\"
    - "  --fail \\"
    - "  -X POST \\"
    - "  -H 'Content-type: application/vnd.api+json' \\"
    - "  -H \"X-Api-Key: $GAT_API_KEY\" \\"
    - "  -d \"{"
    - "    \\\"data\\\":{"
    - "      \\\"type\\\":\\\"testRequest\\\","
    - "      \\\"attributes\\\":{"
    - "        \\\"description\\\":$test_description,"
    - "        \\\"name\\\":$test_name,"
    - "        \\\"application_url\\\":$app_url,"
    - "        \\\"test_cases\\\":$test_cases,"
    - "        \\\"credentials_and_access_instructions\\\":$credentials_and_access_instructions"
    - "      }"
    - "    }"
    - "  }\" \\"
    - "  $api_url"
    variables:
    - key: "DRY_RUN"
      value: "true"
      type: "VAR"
      settable: true
      description: "whether or not this should simulate real test request or be an actual, legit test request GAT will charge for"
    - key: "GAT_API_KEY"
      value: ""
      type: "VAR"
      encrypted: true
      description: "API key generated in GAT application(https://app.globalapptesting.com/organization-settings/api-settings)"
    docker_layer_caching_scope: "ACTION"
